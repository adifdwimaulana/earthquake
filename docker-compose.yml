version: "3.9"

services:
  localstack:
    image: localstack/localstack:3.7
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=dynamodb,lambda,iam,sts,cloudformation,sqs
      - AWS_ACCESS_KEY_ID=ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=SECRET_ACCESS_KEY
      - AWS_DEFAULT_REGION=ap-southeast-1
      - DEBUG=1
      - LAMBDA_EXECUTOR=docker-reuse
    volumes:
      - ./.localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - localnet

  cdk:
    build:
      context: ./cdk
      dockerfile: Dockerfile
    container_name: cdk
    working_dir: /cdk
    volumes:
      - ./cdk:/cdk
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AWS_ACCESS_KEY_ID=ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=SECRET_ACCESS_KEY
      - AWS_REGION=ap-southeast-1
      - AWS_ACCOUNT_ID=000000000000
      - LOCALSTACK_HOST=localstack
      - EDGE_PORT=4566
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ENDPOINT_URL_S3=http://localstack:4566
      - AWS_ENDPOINT_URL_CLOUDFORMATION=http://localstack:4566
      - AWS_ENDPOINT_URL_LAMBDA=http://localstack:4566
      - AWS_ENDPOINT_URL_DYNAMODB=http://localstack:4566
    depends_on:
      localstack:
        condition: service_healthy
    command: >
      sh -c "npm install &&
            npx cdklocal -a 'npx ts-node --prefer-ts-exts bin/cdk.ts' deploy --require-approval never"
    networks:
      - localnet

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    ports:
      - "3000:3000"
    environment:
      - AWS_ACCESS_KEY_ID=ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=SECRET_ACCESS_KEY
      - AWS_REGION=ap-southeast-1
      - DYNAMODB_ENDPOINT=http://localstack:4566
      - LAMBDA_ENDPOINT=http://localstack:4566
    depends_on:
      - localstack
      - cdk
    command: ["pnpm", "run", "start:dev"]
    networks:
      - localnet

networks:
  localnet:
    driver: bridge
